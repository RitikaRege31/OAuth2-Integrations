{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\VectorShift-assignment\\\\frontend\\\\src\\\\integration-form.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Box, Autocomplete, TextField } from '@mui/material';\nimport { AirtableIntegration } from './integrations/airtable';\nimport { NotionIntegration } from './integrations/notion';\n// import { HubSpotIntegration } from './integrations/hubspot';\nimport { authorizeHubSpot, getHubSpotItems } from './integrations/hubspot';\nimport { DataForm } from './data-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst integrationMapping = {\n  'Notion': NotionIntegration,\n  'Airtable': AirtableIntegration,\n  'HubSpot': ({\n    user,\n    org,\n    integrationParams,\n    setIntegrationParams\n  }) => {\n    const handleAuthorize = async () => {\n      await authorizeHubSpot(user, org);\n    };\n    const handleFetchItems = async () => {\n      const items = await getHubSpotItems(user, org);\n      setIntegrationParams({\n        type: 'HubSpot',\n        credentials: {\n          user,\n          org,\n          items\n        }\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"HubSpot Authorization\",\n        value: \"Click to authorize HubSpot integration\",\n        InputProps: {\n          readOnly: true\n        },\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAuthorize,\n          children: \"Authorize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFetchItems,\n          children: \"Fetch Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n};\nexport const IntegrationForm = () => {\n  _s();\n  const [integrationParams, setIntegrationParams] = useState({});\n  const [user, setUser] = useState('TestUser');\n  const [org, setOrg] = useState('TestOrg');\n  const [currType, setCurrType] = useState(null);\n  const CurrIntegration = integrationMapping[currType];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"User\",\n        value: user,\n        onChange: e => setUser(e.target.value),\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Organization\",\n        value: org,\n        onChange: e => setOrg(e.target.value),\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        id: \"integration-type\",\n        options: Object.keys(integrationMapping),\n        sx: {\n          width: 300,\n          mt: 2\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          label: \"Integration Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 38\n        }, this),\n        onChange: (e, value) => setCurrType(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), currType && /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(CurrIntegration, {\n        user: user,\n        org: org,\n        integrationParams: integrationParams,\n        setIntegrationParams: setIntegrationParams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), (integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.credentials) && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(DataForm, {\n        integrationType: integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.type,\n        credentials: integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.credentials\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(IntegrationForm, \"xvZhzmI5B2a5MpNKGxfH76a84tE=\");\n_c = IntegrationForm;\nvar _c;\n$RefreshReg$(_c, \"IntegrationForm\");","map":{"version":3,"names":["useState","Box","Autocomplete","TextField","AirtableIntegration","NotionIntegration","authorizeHubSpot","getHubSpotItems","DataForm","jsxDEV","_jsxDEV","integrationMapping","HubSpot","user","org","integrationParams","setIntegrationParams","handleAuthorize","handleFetchItems","items","type","credentials","display","flexDirection","sx","mt","children","label","value","InputProps","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","onClick","IntegrationForm","_s","setUser","setOrg","currType","setCurrType","CurrIntegration","alignItems","width","onChange","e","target","id","options","Object","keys","renderInput","params","integrationType","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/GitHub/VectorShift-assignment/frontend/src/integration-form.js"],"sourcesContent":["import { useState } from 'react';\nimport {\n    Box,\n    Autocomplete,\n    TextField,\n} from '@mui/material';\nimport { AirtableIntegration } from './integrations/airtable';\nimport { NotionIntegration } from './integrations/notion';\n// import { HubSpotIntegration } from './integrations/hubspot';\nimport { authorizeHubSpot, getHubSpotItems } from './integrations/hubspot';\nimport { DataForm } from './data-form';\n\nconst integrationMapping = {\n    'Notion': NotionIntegration,\n    'Airtable': AirtableIntegration,\n    'HubSpot': ({ user, org, integrationParams, setIntegrationParams }) => {\n        const handleAuthorize = async () => {\n            await authorizeHubSpot(user, org);\n        };\n\n        const handleFetchItems = async () => {\n            const items = await getHubSpotItems(user, org);\n            setIntegrationParams({\n                type: 'HubSpot',\n                credentials: { user, org, items },\n            });\n        };\n\n        return (\n            <Box display='flex' flexDirection='column' sx={{ mt: 2 }}>\n                <TextField\n                    label=\"HubSpot Authorization\"\n                    value=\"Click to authorize HubSpot integration\"\n                    InputProps={{ readOnly: true }}\n                    sx={{ mt: 2 }}\n                />\n                <Box display=\"flex\" justifyContent=\"space-between\" sx={{ mt: 2 }}>\n                    <button onClick={handleAuthorize}>Authorize</button>\n                    <button onClick={handleFetchItems}>Fetch Items</button>\n                </Box>\n            </Box>\n        );\n    },\n};\n\nexport const IntegrationForm = () => {\n    const [integrationParams, setIntegrationParams] = useState({});\n    const [user, setUser] = useState('TestUser');\n    const [org, setOrg] = useState('TestOrg');\n    const [currType, setCurrType] = useState(null);\n    const CurrIntegration = integrationMapping[currType];\n\n  return (\n    <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' sx={{ width: '100%' }}>\n        <Box display='flex' flexDirection='column'>\n        <TextField\n            label=\"User\"\n            value={user}\n            onChange={(e) => setUser(e.target.value)}\n            sx={{mt: 2}}\n        />\n        <TextField\n            label=\"Organization\"\n            value={org}\n            onChange={(e) => setOrg(e.target.value)}\n            sx={{mt: 2}}\n        />\n        <Autocomplete\n            id=\"integration-type\"\n            options={Object.keys(integrationMapping)}\n            sx={{ width: 300, mt: 2 }}\n            renderInput={(params) => <TextField {...params} label=\"Integration Type\" />}\n            onChange={(e, value) => setCurrType(value)}\n        />\n        </Box>\n        {currType && \n        <Box>\n            <CurrIntegration user={user} org={org} integrationParams={integrationParams} setIntegrationParams={setIntegrationParams} />\n        </Box>\n        }\n        {integrationParams?.credentials && \n        <Box sx={{mt: 2}}>\n            <DataForm integrationType={integrationParams?.type} credentials={integrationParams?.credentials} />\n        </Box>\n        }\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}