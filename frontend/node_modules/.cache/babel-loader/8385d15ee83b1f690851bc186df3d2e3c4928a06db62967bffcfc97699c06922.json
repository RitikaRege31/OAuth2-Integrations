{"ast":null,"code":"// hubspot.js\n\nimport axios from 'axios';\nexport const authorizeHubSpot = async (user, org) => {\n  try {\n    const formData = new FormData();\n    formData.append('user_id', user);\n    formData.append('org_id', org);\n    const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\n    const authURL = response === null || response === void 0 ? void 0 : response.data;\n    const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\n\n    // Polling for the window to close\n    return new Promise((resolve, reject) => {\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          resolve();\n        }\n      }, 200);\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    alert((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Failed to authorize HubSpot');\n    throw error;\n  }\n};\nexport const getHubSpotItems = async (user, org) => {\n  try {\n    const formData = new FormData();\n    formData.append('user_id', user);\n    formData.append('org_id', org);\n    const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    alert((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to fetch HubSpot items');\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","authorizeHubSpot","user","org","formData","FormData","append","response","post","authURL","data","newWindow","window","open","Promise","resolve","reject","pollTimer","setInterval","closed","clearInterval","error","_error$response","_error$response$data","alert","detail","getHubSpotItems","_error$response2","_error$response2$data"],"sources":["C:/Users/DELL/Documents/GitHub/VectorShift-assignment/frontend/src/integrations/hubspot.js"],"sourcesContent":["// hubspot.js\r\n\r\nimport axios from 'axios';\r\n\r\nexport const authorizeHubSpot = async (user, org) => {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('user_id', user);\r\n        formData.append('org_id', org);\r\n        const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\r\n        const authURL = response?.data;\r\n\r\n        const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\r\n\r\n        // Polling for the window to close\r\n        return new Promise((resolve, reject) => {\r\n            const pollTimer = window.setInterval(() => {\r\n                if (newWindow?.closed !== false) {\r\n                    window.clearInterval(pollTimer);\r\n                    resolve();\r\n                }\r\n            }, 200);\r\n        });\r\n    } catch (error) {\r\n        alert(error?.response?.data?.detail || 'Failed to authorize HubSpot');\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getHubSpotItems = async (user, org) => {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('user_id', user);\r\n        formData.append('org_id', org);\r\n        const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\r\n        return response.data;\r\n    } catch (error) {\r\n        alert(error?.response?.data?.detail || 'Failed to fetch HubSpot items');\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,IAAI,EAAEC,GAAG,KAAK;EACjD,IAAI;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEJ,IAAI,CAAC;IAChCE,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEH,GAAG,CAAC;IAC9B,MAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAE,sDAAqD,EAAEJ,QAAQ,CAAC;IACnG,MAAMK,OAAO,GAAGF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,IAAI;IAE9B,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACJ,OAAO,EAAE,uBAAuB,EAAE,uBAAuB,CAAC;;IAExF;IACA,OAAO,IAAIK,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,MAAMC,SAAS,GAAGL,MAAM,CAACM,WAAW,CAAC,MAAM;QACvC,IAAI,CAAAP,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEQ,MAAM,MAAK,KAAK,EAAE;UAC7BP,MAAM,CAACQ,aAAa,CAACH,SAAS,CAAC;UAC/BF,OAAO,CAAC,CAAC;QACb;MACJ,CAAC,EAAE,GAAG,CAAC;IACX,CAAC,CAAC;EACN,CAAC,CAAC,OAAOM,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACZC,KAAK,CAAC,CAAAH,KAAK,aAALA,KAAK,wBAAAC,eAAA,GAALD,KAAK,CAAEd,QAAQ,cAAAe,eAAA,wBAAAC,oBAAA,GAAfD,eAAA,CAAiBZ,IAAI,cAAAa,oBAAA,uBAArBA,oBAAA,CAAuBE,MAAM,KAAI,6BAA6B,CAAC;IACrE,MAAMJ,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMK,eAAe,GAAG,MAAAA,CAAOxB,IAAI,EAAEC,GAAG,KAAK;EAChD,IAAI;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEJ,IAAI,CAAC;IAChCE,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEH,GAAG,CAAC;IAC9B,MAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAE,wDAAuD,EAAEJ,QAAQ,CAAC;IACrG,OAAOG,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOW,KAAK,EAAE;IAAA,IAAAM,gBAAA,EAAAC,qBAAA;IACZJ,KAAK,CAAC,CAAAH,KAAK,aAALA,KAAK,wBAAAM,gBAAA,GAALN,KAAK,CAAEd,QAAQ,cAAAoB,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiBjB,IAAI,cAAAkB,qBAAA,uBAArBA,qBAAA,CAAuBH,MAAM,KAAI,+BAA+B,CAAC;IACvE,MAAMJ,KAAK;EACf;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}