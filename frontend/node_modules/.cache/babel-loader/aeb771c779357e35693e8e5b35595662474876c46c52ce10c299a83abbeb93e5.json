{"ast":null,"code":"// import axios from \"axios\";\n\n// const BASE_URL = \"http://localhost:8000/api/hubspot\";\n// const HUBSPOT_CLIENT_ID = process.env.HUBSPOT_CLIENT_ID;\n// const HUBSPOT_REDIRECT_URI = process.env.HUBSPOT_REDIRECT_URI;\n\n// export const authorizeHubSpot = async (userId, orgId) => {\n//     try {\n//       // Send the request to the backend to get the HubSpot authorization URL\n//       const response = await axios.post(`${BASE_URL}/integrations/hubspot/authorize`, { userId, orgId });\n\n//       if (response?.data?.url) {\n//         // Perform the actual redirection to HubSpot\n//         window.location.href = response.data.url;\n//       } else {\n//         console.error(\"No URL received from backend:\", response);\n//         throw new Error(\"No URL received from the backend\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error during HubSpot authorization:\", error);\n//       alert(`Authorization failed: ${error?.response?.data?.detail || error.message}`);\n//     }\n//   };\n\n// export const getHubSpotItems = async (userId, orgId) => {\n//   try {\n//     const response = await axios.get(`${BASE_URL}/items`, {\n//       params: { user_id: userId, org_id: orgId },\n//     });\n//     return response.data.items;\n//   } catch (error) {\n//     console.error(\"Error fetching HubSpot items:\", error);\n//     return [];\n//   }\n// };\n// hubspot.js\nimport axios from \"axios\";\n\n// const BASE_URL = \"http://localhost:8000/\";\nconst HUBSPOT_CLIENT_ID = process.env.HUBSPOT_CLIENT_ID;\nconst HUBSPOT_REDIRECT_URI = process.env.HUBSPOT_REDIRECT_URI;\nexport const authorizeHubSpot = async (userId, orgId) => {\n  try {\n    var _response$data;\n    // Send the request to the backend to get the HubSpot authorization URL\n    const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, {\n      userId,\n      orgId\n    });\n    if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.url) {\n      // Perform the actual redirection to HubSpot\n      window.location.href = response.data.url;\n    } else {\n      console.error(\"No URL received from backend:\", response);\n      throw new Error(\"No URL received from the backend\");\n    }\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error(\"Error during HubSpot authorization:\", error);\n    alert(`Authorization failed: ${(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message}`);\n  }\n};\nexport const getHubSpotItems = async (userId, orgId) => {\n  try {\n    const response = await axios.get(`http://localhost:8000/integrations/hubspot/items`, {\n      params: {\n        user_id: userId,\n        org_id: orgId\n      }\n    });\n    return response.data.items;\n  } catch (error) {\n    console.error(\"Error fetching HubSpot items:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","HUBSPOT_CLIENT_ID","process","env","HUBSPOT_REDIRECT_URI","authorizeHubSpot","userId","orgId","_response$data","response","post","data","url","window","location","href","console","error","Error","_error$response","_error$response$data","alert","detail","message","getHubSpotItems","get","params","user_id","org_id","items"],"sources":["C:/Users/DELL/Documents/GitHub/VectorShift-assignment/frontend/src/integrations/hubspot.js"],"sourcesContent":["// import axios from \"axios\";\r\n\r\n// const BASE_URL = \"http://localhost:8000/api/hubspot\";\r\n// const HUBSPOT_CLIENT_ID = process.env.HUBSPOT_CLIENT_ID;\r\n// const HUBSPOT_REDIRECT_URI = process.env.HUBSPOT_REDIRECT_URI;\r\n\r\n// export const authorizeHubSpot = async (userId, orgId) => {\r\n//     try {\r\n//       // Send the request to the backend to get the HubSpot authorization URL\r\n//       const response = await axios.post(`${BASE_URL}/integrations/hubspot/authorize`, { userId, orgId });\r\n  \r\n//       if (response?.data?.url) {\r\n//         // Perform the actual redirection to HubSpot\r\n//         window.location.href = response.data.url;\r\n//       } else {\r\n//         console.error(\"No URL received from backend:\", response);\r\n//         throw new Error(\"No URL received from the backend\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error during HubSpot authorization:\", error);\r\n//       alert(`Authorization failed: ${error?.response?.data?.detail || error.message}`);\r\n//     }\r\n//   };\r\n  \r\n  \r\n\r\n// export const getHubSpotItems = async (userId, orgId) => {\r\n//   try {\r\n//     const response = await axios.get(`${BASE_URL}/items`, {\r\n//       params: { user_id: userId, org_id: orgId },\r\n//     });\r\n//     return response.data.items;\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching HubSpot items:\", error);\r\n//     return [];\r\n//   }\r\n// };\r\n// hubspot.js\r\nimport axios from \"axios\";\r\n\r\n// const BASE_URL = \"http://localhost:8000/\";\r\nconst HUBSPOT_CLIENT_ID = process.env.HUBSPOT_CLIENT_ID;\r\nconst HUBSPOT_REDIRECT_URI = process.env.HUBSPOT_REDIRECT_URI;\r\n\r\nexport const authorizeHubSpot = async (userId, orgId) => {\r\n    try {\r\n        // Send the request to the backend to get the HubSpot authorization URL\r\n        const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, { userId, orgId });\r\n\r\n        if (response?.data?.url) {\r\n            // Perform the actual redirection to HubSpot\r\n            window.location.href = response.data.url;\r\n        } else {\r\n            console.error(\"No URL received from backend:\", response);\r\n            throw new Error(\"No URL received from the backend\");\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error during HubSpot authorization:\", error);\r\n        alert(`Authorization failed: ${error?.response?.data?.detail || error.message}`);\r\n    }\r\n};\r\n\r\nexport const getHubSpotItems = async (userId, orgId) => {\r\n  try {\r\n    const response = await axios.get(`http://localhost:8000/integrations/hubspot/items`, {\r\n      params: { user_id: userId, org_id: orgId },\r\n    });\r\n    return response.data.items;\r\n  } catch (error) {\r\n    console.error(\"Error fetching HubSpot items:\", error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,iBAAiB,GAAGC,OAAO,CAACC,GAAG,CAACF,iBAAiB;AACvD,MAAMG,oBAAoB,GAAGF,OAAO,CAACC,GAAG,CAACC,oBAAoB;AAE7D,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,KAAK;EACrD,IAAI;IAAA,IAAAC,cAAA;IACA;IACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAE,sDAAqD,EAAE;MAAEJ,MAAM;MAAEC;IAAM,CAAC,CAAC;IAE5G,IAAIE,QAAQ,aAARA,QAAQ,gBAAAD,cAAA,GAARC,QAAQ,CAAEE,IAAI,cAAAH,cAAA,eAAdA,cAAA,CAAgBI,GAAG,EAAE;MACrB;MACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGN,QAAQ,CAACE,IAAI,CAACC,GAAG;IAC5C,CAAC,MAAM;MACHI,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAER,QAAQ,CAAC;MACxD,MAAM,IAAIS,KAAK,CAAC,kCAAkC,CAAC;IACvD;EACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;IAAA,IAAAE,eAAA,EAAAC,oBAAA;IACZJ,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC3DI,KAAK,CAAE,yBAAwB,CAAAJ,KAAK,aAALA,KAAK,wBAAAE,eAAA,GAALF,KAAK,CAAER,QAAQ,cAAAU,eAAA,wBAAAC,oBAAA,GAAfD,eAAA,CAAiBR,IAAI,cAAAS,oBAAA,uBAArBA,oBAAA,CAAuBE,MAAM,KAAIL,KAAK,CAACM,OAAQ,EAAC,CAAC;EACpF;AACJ,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOlB,MAAM,EAAEC,KAAK,KAAK;EACtD,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMT,KAAK,CAACyB,GAAG,CAAE,kDAAiD,EAAE;MACnFC,MAAM,EAAE;QAAEC,OAAO,EAAErB,MAAM;QAAEsB,MAAM,EAAErB;MAAM;IAC3C,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACE,IAAI,CAACkB,KAAK;EAC5B,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,EAAE;EACX;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}