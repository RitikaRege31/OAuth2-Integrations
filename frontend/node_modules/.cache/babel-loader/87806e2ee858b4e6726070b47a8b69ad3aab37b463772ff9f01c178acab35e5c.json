{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\VectorShift-assignment\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\",\n  _s = $RefreshSig$();\n// import axios from \"axios\";\n\n// const BASE_URL = \"http://localhost:8000/integrations/hubspot\";\n\n// // export const authorizeHubSpot = async (userId, orgId) => {\n// //   try {\n// //     const response = await axios.post(`${BASE_URL}/authorize`, {\n// //       params: { user_id: userId, org_id: orgId },\n// //     });\n// //     window.location.href = response.data.url;\n// //   } catch (error) {\n// //     console.error(\"Error during HubSpot authorization:\", error);\n// //   }\n// // };\n// export const authorizeHubSpot = async (userId, orgId) => {\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8000/integrations/hubspot/authorize\",\n//         new URLSearchParams({\n//           user_id: userId,\n//           org_id: orgId,\n//         })\n//       );\n//       window.location.href = response.data.url;\n//     } catch (error) {\n//       console.error(\"Error during HubSpot authorization:\", error);\n//     }\n//   };\n\n// export const getHubSpotItems = async (userId, orgId) => {\n//   try {\n//     const response = await axios.get(`${BASE_URL}/items`, {\n//       params: { user_id: userId, org_id: orgId },\n//     });\n//     return response.data.items;\n//   } catch (error) {\n//     console.error(\"Error fetching HubSpot items:\", error);\n//     return [];\n//   }\n// };\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HubSpotAuth = () => {\n  _s();\n  const [authUrl, setAuthUrl] = useState('');\n  const [tokens, setTokens] = useState(null);\n  const [userId, setUserId] = useState('');\n\n  // Update with your actual HubSpot OAuth URLs and credentials\n  const HUBSPOT_CLIENT_ID = '0252423f-9a2d-4434-b622-3b2129f9c46d';\n  const HUBSPOT_REDIRECT_URI = 'http://localhost:8000/integrations/hubspot/oauth2callback';\n  const HUBSPOT_OAUTH_URL = `https://app.hubspot.com/oauth/authorize?` + `client_id=${HUBSPOT_CLIENT_ID}&redirect_uri=${HUBSPOT_REDIRECT_URI}&` + `scope=crm.objects.contacts.read%20crm.objects.contacts.write`;\n  const REDIS_BACKEND_URL = 'http://localhost:8000'; // Change to your backend URL\n\n  // Step 1: Get HubSpot OAuth authorization URL\n  const getAuthUrl = () => {\n    setAuthUrl(HUBSPOT_OAUTH_URL);\n  };\n\n  // Step 2: Handle OAuth callback and exchange code for tokens\n  const handleOAuthCallback = async code => {\n    try {\n      // Call your backend API to exchange the code for tokens\n      const response = await axios.get(`${REDIS_BACKEND_URL}/oauth2callback?code=${code}&user_id=${userId}`);\n      const tokens = response.data.tokens;\n\n      // Save tokens to the state\n      setTokens(tokens);\n\n      // Store tokens in the backend (Redis)\n      await saveTokens(userId, tokens);\n      alert('OAuth successful, tokens saved!');\n    } catch (error) {\n      console.error('Error during OAuth callback:', error);\n      alert('Error during OAuth callback!');\n    }\n  };\n\n  // Step 3: Save tokens to the backend (Redis)\n  const saveTokens = async (userId, tokens) => {\n    try {\n      await axios.post(`${REDIS_BACKEND_URL}/save_tokens`, {\n        user_id: userId,\n        tokens: tokens\n      });\n      alert('Tokens saved successfully in Redis!');\n    } catch (error) {\n      console.error('Error saving tokens:', error);\n      alert('Error saving tokens!');\n    }\n  };\n\n  // Step 4: Retrieve tokens from the backend (Redis)\n  const retrieveTokens = async () => {\n    try {\n      const response = await axios.get(`${REDIS_BACKEND_URL}/get_tokens?user_id=${userId}`);\n      setTokens(response.data.tokens);\n      alert('Tokens retrieved from Redis!');\n    } catch (error) {\n      console.error('Error retrieving tokens:', error);\n      alert('Error retrieving tokens!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HubSpot OAuth Integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getAuthUrl,\n      children: \"Get OAuth URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), authUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Click \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: authUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }, this), \" to authorize your HubSpot account.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter User ID\",\n      value: userId,\n      onChange: e => setUserId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: retrieveTokens,\n      children: \"Retrieve Tokens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), tokens && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tokens:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(tokens, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleOAuthCallback('mockAuthCode123'),\n      children: \"Simulate OAuth Callback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(HubSpotAuth, \"aj9oKa5tfeofUP6O2gFSDqKFi8o=\");\n_c = HubSpotAuth;\nexport default HubSpotAuth;\nvar _c;\n$RefreshReg$(_c, \"HubSpotAuth\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","HubSpotAuth","_s","authUrl","setAuthUrl","tokens","setTokens","userId","setUserId","HUBSPOT_CLIENT_ID","HUBSPOT_REDIRECT_URI","HUBSPOT_OAUTH_URL","REDIS_BACKEND_URL","getAuthUrl","handleOAuthCallback","code","response","get","data","saveTokens","alert","error","console","post","user_id","retrieveTokens","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","target","rel","type","placeholder","value","onChange","e","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/GitHub/VectorShift-assignment/frontend/src/integrations/hubspot.js"],"sourcesContent":["// import axios from \"axios\";\r\n\r\n// const BASE_URL = \"http://localhost:8000/integrations/hubspot\";\r\n\r\n// // export const authorizeHubSpot = async (userId, orgId) => {\r\n// //   try {\r\n// //     const response = await axios.post(`${BASE_URL}/authorize`, {\r\n// //       params: { user_id: userId, org_id: orgId },\r\n// //     });\r\n// //     window.location.href = response.data.url;\r\n// //   } catch (error) {\r\n// //     console.error(\"Error during HubSpot authorization:\", error);\r\n// //   }\r\n// // };\r\n// export const authorizeHubSpot = async (userId, orgId) => {\r\n//     try {\r\n//       const response = await axios.post(\r\n//         \"http://localhost:8000/integrations/hubspot/authorize\",\r\n//         new URLSearchParams({\r\n//           user_id: userId,\r\n//           org_id: orgId,\r\n//         })\r\n//       );\r\n//       window.location.href = response.data.url;\r\n//     } catch (error) {\r\n//       console.error(\"Error during HubSpot authorization:\", error);\r\n//     }\r\n//   };\r\n  \r\n\r\n// export const getHubSpotItems = async (userId, orgId) => {\r\n//   try {\r\n//     const response = await axios.get(`${BASE_URL}/items`, {\r\n//       params: { user_id: userId, org_id: orgId },\r\n//     });\r\n//     return response.data.items;\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching HubSpot items:\", error);\r\n//     return [];\r\n//   }\r\n// };\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst HubSpotAuth = () => {\r\n  const [authUrl, setAuthUrl] = useState('');\r\n  const [tokens, setTokens] = useState(null);\r\n  const [userId, setUserId] = useState('');\r\n\r\n  // Update with your actual HubSpot OAuth URLs and credentials\r\n  const HUBSPOT_CLIENT_ID = '0252423f-9a2d-4434-b622-3b2129f9c46d';\r\n  const HUBSPOT_REDIRECT_URI = 'http://localhost:8000/integrations/hubspot/oauth2callback';\r\n  const HUBSPOT_OAUTH_URL = (\r\n    `https://app.hubspot.com/oauth/authorize?` +\r\n    `client_id=${HUBSPOT_CLIENT_ID}&redirect_uri=${HUBSPOT_REDIRECT_URI}&` +\r\n    `scope=crm.objects.contacts.read%20crm.objects.contacts.write`\r\n  );\r\n\r\n  const REDIS_BACKEND_URL = 'http://localhost:8000'; // Change to your backend URL\r\n\r\n  // Step 1: Get HubSpot OAuth authorization URL\r\n  const getAuthUrl = () => {\r\n    setAuthUrl(HUBSPOT_OAUTH_URL);\r\n  };\r\n\r\n  // Step 2: Handle OAuth callback and exchange code for tokens\r\n  const handleOAuthCallback = async (code) => {\r\n    try {\r\n      // Call your backend API to exchange the code for tokens\r\n      const response = await axios.get(`${REDIS_BACKEND_URL}/oauth2callback?code=${code}&user_id=${userId}`);\r\n      const tokens = response.data.tokens;\r\n\r\n      // Save tokens to the state\r\n      setTokens(tokens);\r\n\r\n      // Store tokens in the backend (Redis)\r\n      await saveTokens(userId, tokens);\r\n\r\n      alert('OAuth successful, tokens saved!');\r\n    } catch (error) {\r\n      console.error('Error during OAuth callback:', error);\r\n      alert('Error during OAuth callback!');\r\n    }\r\n  };\r\n\r\n  // Step 3: Save tokens to the backend (Redis)\r\n  const saveTokens = async (userId, tokens) => {\r\n    try {\r\n      await axios.post(`${REDIS_BACKEND_URL}/save_tokens`, {\r\n        user_id: userId,\r\n        tokens: tokens,\r\n      });\r\n      alert('Tokens saved successfully in Redis!');\r\n    } catch (error) {\r\n      console.error('Error saving tokens:', error);\r\n      alert('Error saving tokens!');\r\n    }\r\n  };\r\n\r\n  // Step 4: Retrieve tokens from the backend (Redis)\r\n  const retrieveTokens = async () => {\r\n    try {\r\n      const response = await axios.get(`${REDIS_BACKEND_URL}/get_tokens?user_id=${userId}`);\r\n      setTokens(response.data.tokens);\r\n      alert('Tokens retrieved from Redis!');\r\n    } catch (error) {\r\n      console.error('Error retrieving tokens:', error);\r\n      alert('Error retrieving tokens!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>HubSpot OAuth Integration</h1>\r\n\r\n      {/* Button to get OAuth URL */}\r\n      <button onClick={getAuthUrl}>Get OAuth URL</button>\r\n      {authUrl && (\r\n        <div>\r\n          <p>\r\n            Click <a href={authUrl} target=\"_blank\" rel=\"noopener noreferrer\">here</a> to authorize your HubSpot account.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Input field for user ID (for saving/retrieving tokens) */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter User ID\"\r\n        value={userId}\r\n        onChange={(e) => setUserId(e.target.value)}\r\n      />\r\n\r\n      {/* Button to retrieve tokens */}\r\n      <button onClick={retrieveTokens}>Retrieve Tokens</button>\r\n\r\n      {/* Display retrieved tokens */}\r\n      {tokens && (\r\n        <div>\r\n          <h3>Tokens:</h3>\r\n          <pre>{JSON.stringify(tokens, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n\r\n      {/* OAuth callback simulation */}\r\n      {/* Ideally, the callback will happen automatically when the user is redirected after authorization */}\r\n      {/* For now, this button will simulate the OAuth callback with a mock authorization code */}\r\n      <button onClick={() => handleOAuthCallback('mockAuthCode123')}>Simulate OAuth Callback</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HubSpotAuth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}