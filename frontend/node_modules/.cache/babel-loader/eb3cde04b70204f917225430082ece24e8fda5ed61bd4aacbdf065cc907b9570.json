{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\VectorShift-assignment\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\",\n  _s = $RefreshSig$();\n// import axios from \"axios\";\n\n// const BASE_URL = \"http://localhost:8000/api/hubspot\";\n// const HUBSPOT_CLIENT_ID = process.env.HUBSPOT_CLIENT_ID;\n// const HUBSPOT_REDIRECT_URI = process.env.HUBSPOT_REDIRECT_URI;\n\n// export const authorizeHubSpot = async (userId, orgId) => {\n//     try {\n//       // Send the request to the backend to get the HubSpot authorization URL\n//       const response = await axios.post(`${BASE_URL}/integrations/hubspot/authorize`, { userId, orgId });\n\n//       if (response?.data?.url) {\n//         // Perform the actual redirection to HubSpot\n//         window.location.href = response.data.url;\n//       } else {\n//         console.error(\"No URL received from backend:\", response);\n//         throw new Error(\"No URL received from the backend\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error during HubSpot authorization:\", error);\n//       alert(`Authorization failed: ${error?.response?.data?.detail || error.message}`);\n//     }\n//   };\n\n// export const getHubSpotItems = async (userId, orgId) => {\n//   try {\n//     const response = await axios.get(`${BASE_URL}/items`, {\n//       params: { user_id: userId, org_id: orgId },\n//     });\n//     return response.data.items;\n//   } catch (error) {\n//     console.error(\"Error fetching HubSpot items:\", error);\n//     return [];\n//   }\n// };\n// hubspot.js\n\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport { authorizeHubSpot } from './api/hubspot'; // Importing the authorizeHubSpot function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HubSpotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Function to handle HubSpot OAuth authorization\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      await authorizeHubSpot(user, org); // This will redirect to the HubSpot authorization page\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail) || 'An error occurred during HubSpot authorization');\n    }\n  };\n\n  // Check if integrationParams contains valid credentials for HubSpot\n  useEffect(() => {\n    setIsConnected(integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials ? true : false);\n  }, [integrationParams]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: \"Parameters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: isConnected ? () => {} : handleConnectClick,\n        color: isConnected ? 'success' : 'primary',\n        disabled: isConnecting,\n        style: {\n          pointerEvents: isConnected ? 'none' : 'auto',\n          cursor: isConnected ? 'default' : 'pointer',\n          opacity: isConnected ? 1 : undefined\n        },\n        children: isConnected ? 'HubSpot Connected' : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 73\n        }, this) : 'Connect to HubSpot'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(HubSpotIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","authorizeHubSpot","jsxDEV","_jsxDEV","HubSpotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","e","_e$response","_e$response$data","alert","response","data","detail","credentials","sx","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","justifyContent","variant","onClick","color","disabled","style","pointerEvents","cursor","opacity","undefined","size","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/GitHub/VectorShift-assignment/frontend/src/integrations/hubspot.js"],"sourcesContent":["// import axios from \"axios\";\r\n\r\n// const BASE_URL = \"http://localhost:8000/api/hubspot\";\r\n// const HUBSPOT_CLIENT_ID = process.env.HUBSPOT_CLIENT_ID;\r\n// const HUBSPOT_REDIRECT_URI = process.env.HUBSPOT_REDIRECT_URI;\r\n\r\n// export const authorizeHubSpot = async (userId, orgId) => {\r\n//     try {\r\n//       // Send the request to the backend to get the HubSpot authorization URL\r\n//       const response = await axios.post(`${BASE_URL}/integrations/hubspot/authorize`, { userId, orgId });\r\n  \r\n//       if (response?.data?.url) {\r\n//         // Perform the actual redirection to HubSpot\r\n//         window.location.href = response.data.url;\r\n//       } else {\r\n//         console.error(\"No URL received from backend:\", response);\r\n//         throw new Error(\"No URL received from the backend\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error during HubSpot authorization:\", error);\r\n//       alert(`Authorization failed: ${error?.response?.data?.detail || error.message}`);\r\n//     }\r\n//   };\r\n  \r\n  \r\n\r\n// export const getHubSpotItems = async (userId, orgId) => {\r\n//   try {\r\n//     const response = await axios.get(`${BASE_URL}/items`, {\r\n//       params: { user_id: userId, org_id: orgId },\r\n//     });\r\n//     return response.data.items;\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching HubSpot items:\", error);\r\n//     return [];\r\n//   }\r\n// };\r\n// hubspot.js\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    CircularProgress\r\n} from '@mui/material';\r\nimport { authorizeHubSpot } from './api/hubspot'; // Importing the authorizeHubSpot function\r\n\r\nexport const HubSpotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n    // Function to handle HubSpot OAuth authorization\r\n    const handleConnectClick = async () => {\r\n        try {\r\n            setIsConnecting(true);\r\n            await authorizeHubSpot(user, org); // This will redirect to the HubSpot authorization page\r\n        } catch (e) {\r\n            setIsConnecting(false);\r\n            alert(e?.response?.data?.detail || 'An error occurred during HubSpot authorization');\r\n        }\r\n    }\r\n\r\n    // Check if integrationParams contains valid credentials for HubSpot\r\n    useEffect(() => {\r\n        setIsConnected(integrationParams?.credentials ? true : false);\r\n    }, [integrationParams]);\r\n\r\n    return (\r\n        <Box sx={{mt: 2}}>\r\n            <Box>Parameters</Box>\r\n            <Box display='flex' alignItems='center' justifyContent='center' sx={{mt: 2}}>\r\n                <Button\r\n                    variant='contained'\r\n                    onClick={isConnected ? () => {} : handleConnectClick}\r\n                    color={isConnected ? 'success' : 'primary'}\r\n                    disabled={isConnecting}\r\n                    style={{\r\n                        pointerEvents: isConnected ? 'none' : 'auto',\r\n                        cursor: isConnected ? 'default' : 'pointer',\r\n                        opacity: isConnected ? 1 : undefined\r\n                    }}\r\n                >\r\n                    {isConnected ? 'HubSpot Connected' : isConnecting ? <CircularProgress size={20} /> : 'Connect to HubSpot'}\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}